[section:concepts Concepts]

[heading Char_range]

A _Char_rng_ is a contiguous sequence of `char`.

Requirements on _Char_rng_.  In the table below, `R` is a type that models
_Char_rng_; `r` is an object of type `R`; `Iter` is an iterator type; and `it`
is an object of type `Iter`.

[table Expression Requirements
    [[Expression]    [Type]     [Description]                      [Notes]]
    [
        [ `begin(r)` or `r.begin()` or `std::begin(r)` ]
        [ Iter ]
        [ The begin-iterator for `r`. ]
        [ If multiple `begin()` overloads exist, they are prefered in the order listed. ]
    ]
    [
        [ `end(r)` or `r.end()` or `std::end(r)` ]
        [ Iter ]
        [ The end-iterator for `r`. ]
        [ If multiple `end()` overloads exist, they are prefered in the order listed. ]
    ]
    [
        [ `typename std::iterator_traits<Iter>::iterator_category` ]
        [ std::random_access_iterator_tag ]
        [ `Iter` must be a random access iterator. ]
        []
    ]
    [
        [ `&*it` ]
        [ `char *` ]
        [ It must be possible to access the `char` sequence underlying `r` as an array. ]
        [ The result will be `char const *` if `Iter` is a `const_iterator`. ]
    ]
]

Additionally, `Iter` must be a contiguous iterator.

[heading Char_iterator]

A _Char_iter_ is an iterator over a sequence of `char`.

Requirements on _Char_iter_.  In the table below, `Iter` is a type that models
_Char_iter_.

[table Expression Requirements
    [[Expression]    [Type]     [Description]]
    [
        [
``typename std::remove_cv<
    typename std::remove_reference<
        typename std::iterator_traits<Iter>::value_type
    >::type
>::type`` ]
        [ `char` ]
        [ The value_type of `Iter` must be convertible to `char`. ]
    ]
]

_Char_iter_ does not need to be a contiguous iterator, and _Char_iter_ does
not need to have a particular iterator category.

[endsect]
